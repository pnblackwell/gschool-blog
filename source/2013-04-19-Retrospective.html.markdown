---
title: Weekly Retrospective
date: 2013-04-19 15:18 -07:00
tags: 
---

<b> Son of Store Engine - what went right? What went wrong? Why? What things will you do the same on your next project and what will you do differently? </b>

What was strange about Store Engine was the fact there was a disorienting mixture going on.  There was a mix of incentives, goals, time, difficulty, complexity, and teamwork that made for a hurried approach with a superficial attention to detail.  Our incentives and goals seemed to be in line with getting the most work done that we possibly could without upsetting our 'client' standard for quality.  The incentives in their requirements seemed to favor having the features out, but they instead wanted fewer features with less quality.  The time we had to complete the task caused us to make hurried decisions and made the amount of check-in time with our clients less frequent.  We didn't stop to consider what would be best as much as we just pushed through each task trying to get it done.  This created a stress level that stopped us from caring about much else than completing our task.  The difficulty and complexity that came from this project was mostly from the legacy code that we inherited. I think there were some new things that we introduced in performance monitoring that were somewhat challenging, but without a doubt, our difficulties came from not being that familiar with the code base we were working from.  In the past we had always been writing our own code, so we were quite familiar with the implications of every new line of code.  This project was certainly different.  In addition, my group inherited code from a teammate who had to leave for a few days in the middle of the project, so our communication was a bit strained and we didn't always have the person who wrote the code to explain it.  It gave us a slower start and I think a strong lesson to take from that is to take significant time in the beginning of any project that is based on other code to understand the other code.  I like how our team worked and I think I would like to do more of it in the future.  We split up tasks but we also came together enough so that we were all on the same page.  Git is still a bit strange sometimes and I'm glad gSchool is forcing me to get acquainted with all the different kinds of problems that can occur with Git.  It's definitely a helpful tool, but man can it be confusing sometimes.

<b> Organization - how are you keeping track of what you need to do on a given day? How do you decide to divide your time between project work, reading, lightning talks, and personal learning? </b>

I'm trying to use Harvest as much as possible.  I like to track what I'm doing during the day, so that I feel productive and so that I stay on task.  When I'm working on something that will take a few hours I also like to break it up into Pomodoros(Pomodori?) for the same reason.  When I have a project due, I tend to only do that work or to do personal learning that is in direct relation to the project.  Lightning talks are once a month and I try to do them as early as possible in the week they're due.  Throwing talks together last minute is stressful and when I've done it, it shows in my opinion.  Reading is definitely hard in this class. We have so much hands-on learning that it can be difficult to get the time to sit down and read.  This book's subject, jQuery seems very applicable to everything we're going to do in the future, so I'm going to figure out how.

I feel like my momentum is building.                